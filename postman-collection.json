{
  "info": {
    "name": "IPO Prediction API - Complete Collection (Enhanced GMP)",
    "description": "Complete Postman collection for IPO prediction system with NSE data, Enhanced GMP analysis (IPOWatch + InvestorGain), Math predictions, AI predictions, and final combined predictions",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string",
      "description": "Base URL for the API"
    },
    {
      "key": "sample_symbol",
      "value": "TATACAP",
      "type": "string",
      "description": "Sample IPO symbol for testing"
    },
    {
      "key": "test_date",
      "value": "2025-09-28",
      "type": "string",
      "description": "Sample date for historical data testing"
    }
  ],
  "item": [
    {
      "name": "üè¢ NSE Live Data",
      "description": "NSE live IPO data endpoints for fetching current and upcoming IPOs",
      "item": [
        {
          "name": "Get Current IPOs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/current?include_gmp=false&save_data=true",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "current"],
              "query": [
                {
                  "key": "include_gmp",
                  "value": "false",
                  "description": "Include Grey Market Premium data"
                },
                {
                  "key": "save_data",
                  "value": "true",
                  "description": "Save data to JSON file"
                }
              ]
            },
            "description": "Fetch all current/active IPOs from NSE"
          },
          "response": []
        },
        {
          "name": "Get Upcoming IPOs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/upcoming?include_gmp=false&save_data=true",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "upcoming"],
              "query": [
                {
                  "key": "include_gmp",
                  "value": "false",
                  "description": "Include Grey Market Premium data"
                },
                {
                  "key": "save_data",
                  "value": "true",
                  "description": "Save data to JSON file"
                }
              ]
            },
            "description": "Fetch all upcoming IPOs from NSE"
          },
          "response": []
        },
        {
          "name": "Get Market Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/market-status?save_data=true",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "market-status"],
              "query": [
                {
                  "key": "save_data",
                  "value": "true",
                  "description": "Save data to JSON file"
                }
              ]
            },
            "description": "Get current NSE market status"
          },
          "response": []
        },
        {
          "name": "Get IPO Active Category (Subscription Data)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/active-category/{{sample_symbol}}?save_data=true",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "active-category", "{{sample_symbol}}"],
              "query": [
                {
                  "key": "save_data",
                  "value": "true",
                  "description": "Save data to JSON file"
                }
              ]
            },
            "description": "Get IPO subscription/bid data for specific symbol"
          },
          "response": []
        },
        {
          "name": "Test NSE Connection",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/test",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "test"]
            },
            "description": "Test NSE API connectivity and all endpoints"
          },
          "response": []
        },
        {
          "name": "Refresh NSE Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "refresh"]
            },
            "description": "Manually refresh NSE session and clear cache"
          },
          "response": []
        },
        {
          "name": "Fetch All NSE Data (Batch)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/fetch-all",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "fetch-all"]
            },
            "description": "Fetch all NSE data (current, upcoming, market status) in one go"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìà Enhanced GMP (Multi-Source)",
      "description": "Enhanced GMP data from IPOWatch + InvestorGain with combined predictions",
      "item": [
        {
          "name": "Fetch Current GMP Data (All Sources)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/fetch",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "fetch"]
            },
            "description": "Fetch current GMP data from both IPOWatch and InvestorGain, create combined data"
          },
          "response": []
        },
        {
          "name": "Get GMP Prediction for Symbol (Current)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/predict/{{sample_symbol}}",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "predict", "{{sample_symbol}}"]
            },
            "description": "Get combined GMP prediction for specific IPO symbol (current date)"
          },
          "response": []
        },
        {
          "name": "Get GMP Prediction for Symbol (Historical)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/predict/{{sample_symbol}}?date={{test_date}}",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "predict", "{{sample_symbol}}"],
              "query": [
                {
                  "key": "date",
                  "value": "{{test_date}}",
                  "description": "Date in YYYY-MM-DD format for historical data"
                }
              ]
            },
            "description": "Get GMP prediction for specific date (historical data)"
          },
          "response": []
        },
        {
          "name": "üÜï Scrape All GMP Sources",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/scrape-sources",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "scrape-sources"]
            },
            "description": "NEW: Scrape data from both IPOWatch and InvestorGain sources separately"
          },
          "response": []
        },
        {
          "name": "üÜï Create Combined GMP Data for Date",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/create-combined/{{test_date}}",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "create-combined", "{{test_date}}"]
            },
            "description": "NEW: Create combined GMP data for specific date (no duplicates)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üßÆ Math Predictions",
      "description": "Pure mathematical prediction endpoints",
      "item": [
        {
          "name": "Get Math Prediction for Symbol",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/math/predict/{{sample_symbol}}",
              "host": ["{{base_url}}"],
              "path": ["api", "math", "predict", "{{sample_symbol}}"]
            },
            "description": "Get pure mathematical prediction for specific IPO symbol"
          },
          "response": []
        }
      ]
    },
    {
      "name": "ü§ñ AI Predictions",
      "description": "AI/ML based prediction endpoints using Gemini",
      "item": [
        {
          "name": "Get AI Prediction for Symbol",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ai/predict/{{sample_symbol}}",
              "host": ["{{base_url}}"],
              "path": ["api", "ai", "predict", "{{sample_symbol}}"]
            },
            "description": "Get AI-based prediction for specific IPO symbol using Gemini"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üéØ Final Predictions (Combined)",
      "description": "Combined predictions from all sources (Enhanced GMP + Math + AI)",
      "item": [
        {
          "name": "Get Final Prediction for Symbol",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/predict/{{sample_symbol}}",
              "host": ["{{base_url}}"],
              "path": ["api", "predict", "{{sample_symbol}}"]
            },
            "description": "Get combined final prediction from all 3 sources (Enhanced GMP + Math + AI)"
          },
          "response": []
        },
        {
          "name": "Process All IPOs (Batch Prediction)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/predict/all",
              "host": ["{{base_url}}"],
              "path": ["api", "predict", "all"]
            },
            "description": "Process all current IPOs and generate combined predictions for each"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîß System Health & Testing",
      "description": "System health checks and testing endpoints",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Basic health check endpoint"
          },
          "response": []
        },
        {
          "name": "API Documentation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/docs",
              "host": ["{{base_url}}"],
              "path": ["docs"]
            },
            "description": "FastAPI auto-generated documentation"
          },
          "response": []
        },
        {
          "name": "OpenAPI Schema",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/openapi.json",
              "host": ["{{base_url}}"],
              "path": ["openapi.json"]
            },
            "description": "OpenAPI schema in JSON format"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üöÄ Enhanced Testing Workflows",
      "description": "Updated step-by-step workflows for testing the enhanced GMP system",
      "item": [
        {
          "name": "WORKFLOW 1: Basic System Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/test",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "test"]
            },
            "description": "üîç STEP 1: Run this first to check NSE connectivity and system health"
          },
          "response": []
        },
        {
          "name": "WORKFLOW 2: Fetch All NSE Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/fetch-all",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "fetch-all"]
            },
            "description": "üìä STEP 2: Fetch all NSE data (current, upcoming, market status)"
          },
          "response": []
        },
        {
          "name": "WORKFLOW 3: Scrape GMP Sources",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/scrape-sources",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "scrape-sources"]
            },
            "description": "üìà STEP 3: Scrape GMP data from both IPOWatch and InvestorGain"
          },
          "response": []
        },
        {
          "name": "WORKFLOW 4: Create Combined GMP Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/create-combined/{{test_date}}",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "create-combined", "{{test_date}}"]
            },
            "description": "üîÑ STEP 4: Create combined GMP data (no duplicates)"
          },
          "response": []
        },
        {
          "name": "WORKFLOW 5: Fetch Complete GMP Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/fetch",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "fetch"]
            },
            "description": "üìã STEP 5: Complete GMP pipeline (scrape + combine all sources)"
          },
          "response": []
        },
        {
          "name": "WORKFLOW 6: Generate All Predictions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/predict/all",
              "host": ["{{base_url}}"],
              "path": ["api", "predict", "all"]
            },
            "description": "üéØ STEP 6: Generate predictions for all current IPOs"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîç Enhanced Symbol Testing",
      "description": "Test endpoints with enhanced GMP data for specific IPO symbols",
      "item": [
        {
          "name": "Test GMP Symbol: TATACAP",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/predict/TATACAP",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "predict", "TATACAP"]
            },
            "description": "Test enhanced GMP prediction for TATACAP"
          },
          "response": []
        },
        {
          "name": "Test GMP Symbol: WEWORK",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/predict/WEWORK",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "predict", "WEWORK"]
            },
            "description": "Test enhanced GMP prediction for WeWork India"
          },
          "response": []
        },
        {
          "name": "Test GMP Historical: TATACAP",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/predict/TATACAP?date=2025-09-27",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "predict", "TATACAP"],
              "query": [
                {
                  "key": "date",
                  "value": "2025-09-27",
                  "description": "Historical date testing"
                }
              ]
            },
            "description": "Test historical GMP data for TATACAP"
          },
          "response": []
        },
        {
          "name": "Test Final Prediction: TATACAP",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/predict/TATACAP",
              "host": ["{{base_url}}"],
              "path": ["api", "predict", "TATACAP"]
            },
            "description": "Test final combined prediction with enhanced GMP for TATACAP"
          },
          "response": []
        },
        {
          "name": "Test Final Prediction: WEWORK",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/predict/WEWORK",
              "host": ["{{base_url}}"],
              "path": ["api", "predict", "WEWORK"]
            },
            "description": "Test final combined prediction with enhanced GMP for WeWork"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìä GMP Data Analysis",
      "description": "Additional endpoints for GMP data analysis and debugging",
      "item": [
        {
          "name": "Test IPOWatch Data Structure",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/scrape-sources",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "scrape-sources"]
            },
            "description": "Check IPOWatch data structure and fields"
          },
          "response": []
        },
        {
          "name": "Test InvestorGain Data Structure",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/scrape-sources",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "scrape-sources"]
            },
            "description": "Check InvestorGain data structure and additional fields"
          },
          "response": []
        },
        {
          "name": "Test Combined Data Logic",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/create-combined/{{test_date}}",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "create-combined", "{{test_date}}"]
            },
            "description": "Test how data is combined (no duplicates, priority logic)"
          },
          "response": []
        },
        {
          "name": "Test Currency Formatting",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/gmp/predict/{{sample_symbol}}",
              "host": ["{{base_url}}"],
              "path": ["api", "gmp", "predict", "{{sample_symbol}}"]
            },
            "description": "Test ‚Çπ currency formatting in responses"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Pre-request script for the entire collection",
          "console.log('Making request to: ' + pm.request.url);",
          "console.log('Enhanced GMP Collection v2.0');",
          "",
          "// Add timestamp to requests",
          "pm.globals.set('timestamp', new Date().toISOString());",
          "",
          "// Set current date for testing",
          "pm.globals.set('current_date', new Date().toISOString().split('T')[0]);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script for all requests",
          "",
          "// Check if response time is reasonable",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(60000); // Increased for scraping",
          "});",
          "",
          "// Check if response is JSON",
          "pm.test('Response is JSON', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Check for successful responses",
          "pm.test('Response is successful', function () {",
          "    pm.expect(pm.response.status).to.be.oneOf([200, 201]);",
          "});",
          "",
          "// Log response for debugging",
          "console.log('Response Status:', pm.response.status);",
          "console.log('Response Time:', pm.response.responseTime + 'ms');",
          "",
          "// Enhanced GMP specific tests",
          "if (pm.request.url.href.includes('/api/gmp/')) {",
          "    console.log('GMP Endpoint Response');",
          "    ",
          "    try {",
          "        const jsonData = pm.response.json();",
          "        ",
          "        // Test for currency formatting",
          "        if (jsonData.gmp && typeof jsonData.gmp === 'string') {",
          "            pm.test('Currency is formatted with ‚Çπ', function () {",
          "                pm.expect(jsonData.gmp).to.include('‚Çπ');",
          "            });",
          "        }",
          "        ",
          "        // Test for source information",
          "        if (jsonData.source) {",
          "            console.log('Data Source:', jsonData.source);",
          "        }",
          "        ",
          "        // Test for available sources",
          "        if (jsonData.available_in) {",
          "            console.log('Available in sources:', jsonData.available_in);",
          "        }",
          "        ",
          "    } catch (e) {",
          "        console.log('Response parsing error:', e);",
          "    }",
          "}",
          "",
          "// Check for common error patterns",
          "if (pm.response.status >= 400) {",
          "    console.log('Error Response:', pm.response.json());",
          "}"
        ]
      }
    }
  ]
}