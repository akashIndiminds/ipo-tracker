{
  "info": {
    "name": "IPO Tracker API - Complete Collection",
    "description": "Complete API collection for IPO tracking with all endpoints and test cases",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "api_version",
      "value": "v1",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè† Health & Status",
      "item": [
        {
          "name": "Root Endpoint",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            }
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/",
                  "host": ["{{base_url}}"],
                  "path": [""]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n    \"message\": \"IPO Tracker API is running!\",\n    \"version\": \"1.0.0\",\n    \"timestamp\": \"2025-09-20T10:30:00Z\",\n    \"status\": \"healthy\"\n}"
            }
          ]
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": [
            {
              "name": "Healthy Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/health",
                  "host": ["{{base_url}}"],
                  "path": ["health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n    \"status\": \"healthy\",\n    \"service\": \"ipo-tracker\",\n    \"timestamp\": \"2025-09-20T10:30:00Z\"\n}"
            }
          ]
        },
        {
          "name": "API Documentation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/docs",
              "host": ["{{base_url}}"],
              "path": ["docs"]
            }
          }
        }
      ]
    },
    {
      "name": "üìà IPO Endpoints",
      "item": [
        {
          "name": "Test NSE Connection",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/test",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "test"]
            }
          },
          "response": [
            {
              "name": "Connection Test Success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/ipo/test",
                  "host": ["{{base_url}}"],
                  "path": ["api", "ipo", "test"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n    \"success\": true,\n    \"message\": \"NSE API test completed: 4/4 endpoints working\",\n    \"results\": {\n        \"current_ipos\": 3,\n        \"upcoming_ipos\": 5,\n        \"past_ipos\": 2,\n        \"market_indices\": 8\n    },\n    \"timestamp\": \"2025-09-20T10:30:00Z\"\n}"
            }
          ]
        },
        {
          "name": "Get Current IPOs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/current",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "current"]
            }
          },
          "response": [
            {
              "name": "Current IPOs Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/ipo/current",
                  "host": ["{{base_url}}"],
                  "path": ["api", "ipo", "current"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n    \"success\": true,\n    \"count\": 3,\n    \"data\": [\n        {\n            \"symbol\": \"GKENERGY\",\n            \"companyName\": \"GK Energy Limited\",\n            \"series\": \"EQ\",\n            \"issueStartDate\": \"19-Sep-2025\",\n            \"issueEndDate\": \"23-Sep-2025\",\n            \"issueSize\": \"22180828\",\n            \"issuePrice\": \"Rs.145 to Rs.153\",\n            \"status\": \"Active\",\n            \"noOfTime\": \"1.092853612137473\",\n            \"noOfSharesOffered\": \"2.2180828E7\",\n            \"noOfsharesBid\": \"2.4240398E7\"\n        },\n        {\n            \"symbol\": \"SAATVIK\",\n            \"companyName\": \"Saatvik Green Energy Limited\",\n            \"series\": \"EQ\",\n            \"issueStartDate\": \"19-Sep-2025\",\n            \"issueEndDate\": \"23-Sep-2025\",\n            \"issueSize\": \"14271970\",\n            \"issuePrice\": \"Rs.442 to Rs.465\",\n            \"status\": \"Active\",\n            \"noOfTime\": \"0.33114419382888277\",\n            \"noOfSharesOffered\": \"1.427197E7\",\n            \"noOfsharesBid\": \"4726080.0\"\n        }\n    ],\n    \"timestamp\": \"2025-09-20T10:30:00Z\",\n    \"source\": \"NSE API\"\n}"
            }
          ]
        },
        {
          "name": "Get Upcoming IPOs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/upcoming",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "upcoming"]
            }
          },
          "response": [
            {
              "name": "Upcoming IPOs Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/ipo/upcoming",
                  "host": ["{{base_url}}"],
                  "path": ["api", "ipo", "upcoming"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n    \"success\": true,\n    \"count\": 5,\n    \"data\": [\n        {\n            \"symbol\": \"SOLARWORLD\",\n            \"companyName\": \"Solarworld Energy Solutions Limited\",\n            \"series\": \"EQ\",\n            \"issueStartDate\": \"23-Sep-2025\",\n            \"issueEndDate\": \"25-Sep-2025\",\n            \"issueSize\": \"14714714\",\n            \"issuePrice\": \"Rs.333 to Rs.351\",\n            \"status\": \"Forthcoming\"\n        },\n        {\n            \"symbol\": \"ARSSBL\",\n            \"companyName\": \"Anand Rathi Share and Stock Brokers Limited\",\n            \"series\": \"EQ\",\n            \"issueStartDate\": \"23-Sep-2025\",\n            \"issueEndDate\": \"25-Sep-2025\",\n            \"issueSize\": \"18974029\",\n            \"issuePrice\": \"Rs.393 to Rs.414\",\n            \"status\": \"Forthcoming\"\n        }\n    ],\n    \"timestamp\": \"2025-09-20T10:30:00Z\",\n    \"source\": \"NSE API\"\n}"
            }
          ]
        },
        {
          "name": "Get Past IPOs (Default 30 days)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/past",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "past"]
            }
          }
        },
        {
          "name": "Get Past IPOs (Custom Days)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/ipo/past?days_back=7",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "past"],
              "query": [
                {
                  "key": "days_back",
                  "value": "7",
                  "description": "Number of days to look back (1-90)"
                }
              ]
            }
          },
          "response": [
            {
              "name": "Past IPOs Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/ipo/past?days_back=7",
                  "host": ["{{base_url}}"],
                  "path": ["api", "ipo", "past"],
                  "query": [
                    {
                      "key": "days_back",
                      "value": "7"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n    \"success\": true,\n    \"count\": 1,\n    \"data\": [\n        {\n            \"symbol\": \"VMSTMT\",\n            \"companyName\": \"VMS TMT Limited\",\n            \"issueStartDate\": \"17-Sep-2025\",\n            \"issueEndDate\": \"19-Sep-2025\",\n            \"issueSize\": \"12300000\",\n            \"issuePrice\": \"Rs.94 to Rs.99\",\n            \"status\": \"Closed\"\n        }\n    ],\n    \"days_back\": 7,\n    \"timestamp\": \"2025-09-20T10:30:00Z\",\n    \"source\": \"NSE API\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "üìä Market Endpoints",
      "item": [
        {
          "name": "Get Market Indices",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/market/indices",
              "host": ["{{base_url}}"],
              "path": ["api", "market", "indices"]
            }
          },
          "response": [
            {
              "name": "Market Indices Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/market/indices",
                  "host": ["{{base_url}}"],
                  "path": ["api", "market", "indices"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n    \"success\": true,\n    \"count\": 6,\n    \"data\": [\n        {\n            \"indexName\": \"NIFTY 50\",\n            \"open\": 25410.2,\n            \"high\": 25428.75,\n            \"low\": 25286.3,\n            \"last\": 25327.05,\n            \"previousClose\": 25423.6,\n            \"percChange\": -0.38,\n            \"yearHigh\": 26277.35,\n            \"yearLow\": 21743.65,\n            \"timeVal\": \"19-Sep-2025 15:30\"\n        },\n        {\n            \"indexName\": \"NIFTY BANK\",\n            \"open\": 55647.95,\n            \"high\": 55688.75,\n            \"low\": 55355.3,\n            \"last\": 55458.85,\n            \"previousClose\": 55727.45,\n            \"percChange\": -0.48,\n            \"yearHigh\": 57628.4,\n            \"yearLow\": 47702.9,\n            \"timeVal\": \"19-Sep-2025 15:30\"\n        }\n    ],\n    \"timestamp\": \"2025-09-20T10:30:00Z\",\n    \"source\": \"NSE API\"\n}"
            }
          ]
        },
        {
          "name": "Get Market Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/market/status",
              "host": ["{{base_url}}"],
              "path": ["api", "market", "status"]
            }
          },
          "response": [
            {
              "name": "Market Status Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/market/status",
                  "host": ["{{base_url}}"],
                  "path": ["api", "market", "status"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"market\": \"Capital Market\",\n            \"marketStatus\": \"Open\",\n            \"tradeDate\": \"20-Sep-2025\",\n            \"index\": \"NIFTY 50\"\n        },\n        {\n            \"market\": \"Derivative Market\",\n            \"marketStatus\": \"Open\",\n            \"tradeDate\": \"20-Sep-2025\",\n            \"index\": \"NIFTY 50\"\n        }\n    ],\n    \"timestamp\": \"2025-09-20T10:30:00Z\",\n    \"source\": \"NSE API\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "üß™ Test Cases",
      "item": [
        {
          "name": "Test All Endpoints (Bulk Test)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/ipo/test",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "test"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Response status is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success field\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "});",
                  "",
                  "pm.test(\"All endpoint results are present\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.results).to.have.property('current_ipos');",
                  "    pm.expect(jsonData.results).to.have.property('upcoming_ipos');",
                  "    pm.expect(jsonData.results).to.have.property('past_ipos');",
                  "    pm.expect(jsonData.results).to.have.property('market_indices');",
                  "});",
                  "",
                  "pm.test(\"At least 2 endpoints working\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    var workingEndpoints = 0;",
                  "    if (jsonData.results.current_ipos > 0) workingEndpoints++;",
                  "    if (jsonData.results.upcoming_ipos > 0) workingEndpoints++;",
                  "    if (jsonData.results.past_ipos > 0) workingEndpoints++;",
                  "    if (jsonData.results.market_indices > 0) workingEndpoints++;",
                  "    pm.expect(workingEndpoints).to.be.at.least(2);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Error Handling Test (Invalid Endpoint)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/ipo/invalid-endpoint",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "invalid-endpoint"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should return 404 for invalid endpoint\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Performance Test (Response Time)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/ipo/current",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "current"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Response time is acceptable\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(60000);",
                  "});",
                  "",
                  "pm.test(\"Response has required fields\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData).to.have.property('count');",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('timestamp');",
                  "});",
                  "",
                  "pm.test(\"Data is array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Data Quality Test (Current IPOs)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/ipo/current",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "current"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"IPO data has required fields\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.length > 0) {",
                  "        var firstIPO = jsonData.data[0];",
                  "        pm.expect(firstIPO).to.have.property('symbol');",
                  "        pm.expect(firstIPO).to.have.property('companyName');",
                  "        pm.expect(firstIPO).to.have.property('issuePrice');",
                  "        pm.expect(firstIPO).to.have.property('status');",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Count matches data length\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.count).to.equal(jsonData.data.length);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìã Environment Tests",
      "item": [
        {
          "name": "Test Local Development",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8000/health",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8000",
              "path": ["health"]
            }
          }
        },
        {
          "name": "Test Production (Update URL)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://your-domain.com/health",
              "protocol": "https",
              "host": ["your-domain", "com"],
              "path": ["health"]
            }
          }
        }
      ]
    },
    {
      "name": "üîÑ Data Integration Tests",
      "item": [
        {
          "name": "Full Data Flow Test",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/ipo/test",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "test"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test and store results for chaining",
                  "pm.test(\"NSE API Connection Working\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    ",
                  "    // Store results for next requests",
                  "    pm.environment.set('nse_working', jsonData.success);",
                  "    pm.environment.set('current_ipo_count', jsonData.results.current_ipos);",
                  "    pm.environment.set('upcoming_ipo_count', jsonData.results.upcoming_ipos);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Chain Test - Current IPOs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/ipo/current",
              "host": ["{{base_url}}"],
              "path": ["api", "ipo", "current"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Current IPOs data consistency\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    var expectedCount = pm.environment.get('current_ipo_count');",
                  "    ",
                  "    if (expectedCount && expectedCount > 0) {",
                  "        pm.expect(jsonData.count).to.be.at.least(0);",
                  "        console.log('Expected: ' + expectedCount + ', Got: ' + jsonData.count);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set timestamp for all requests",
          "pm.globals.set('timestamp', new Date().toISOString());",
          "",
          "// Add delay between requests to avoid rate limiting",
          "if (pm.globals.get('last_request_time')) {",
          "    var lastTime = new Date(pm.globals.get('last_request_time'));",
          "    var now = new Date();",
          "    var timeDiff = now - lastTime;",
          "    ",
          "    if (timeDiff < 2000) { // Less than 2 seconds",
          "        var waitTime = 2000 - timeDiff;",
          "        console.log('Waiting ' + waitTime + 'ms to avoid rate limiting...');",
          "        setTimeout(function(){}, waitTime);",
          "    }",
          "}",
          "",
          "pm.globals.set('last_request_time', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test for all requests",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(60000);",
          "});",
          "",
          "// Log response for debugging",
          "if (pm.response.code !== 200) {",
          "    console.log('‚ùå Request failed:', pm.request.url);",
          "    console.log('üìÑ Response:', pm.response.text().substring(0, 500));",
          "} else {",
          "    console.log('‚úÖ Request successful:', pm.request.url);",
          "}",
          "",
          "// Track successful requests",
          "var successCount = pm.globals.get('success_count') || 0;",
          "var totalCount = pm.globals.get('total_count') || 0;",
          "",
          "totalCount++;",
          "if (pm.response.code === 200) {",
          "    successCount++;",
          "}",
          "",
          "pm.globals.set('success_count', successCount);",
          "pm.globals.set('total_count', totalCount);",
          "",
          "console.log('üìä Success Rate: ' + successCount + '/' + totalCount + ' (' + Math.round((successCount/totalCount)*100) + '%)');"
        ]
      }
    }
  ]
}